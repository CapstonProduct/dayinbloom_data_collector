AWSTemplateFormatVersion: 2010-09-09
Description: >-
  dayinbloom-data-collector
Transform:
- AWS::Serverless-2016-10-31

# Resources declares the AWS resources that you want to include in the stack
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
Resources:
  # Event Bus
  DayinbloomEventBus:
    Type: AWS::Events::EventBus
    Properties:
      Name: dayinbloom-event-bus
  
  # IAM Roles
  SchedulerInvokeRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: scheduler-invoke-lambda-role
      AssumeRolePolicyDocument:     # EventBridge Scheduler가 이 Role을 맡을 수 있도록 허용
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: scheduler.amazonaws.com    # Scheduler 서비스 프린시펄 허용 :contentReference[oaicite:0]{index=0}
            Action: sts:AssumeRole
      Policies:
        - PolicyName: InvokeLambdaPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction          # Lambda 실행 권한
                Resource: 
                  - !GetAtt IntradayDataCollector.Arn
                  - !GetAtt SleepDataCollector.Arn
                  - !GetAtt DailySummaryCollector.Arn
                  - !GetAtt DailyHealthMetricsCollector.Arn
                  - !GetAtt ShortTermAverageCalculator.Arn
                  - !GetAtt LongTermAverageCalculator.Arn
                  - !GetAtt OldAverageDataRemover.Arn
                  - !GetAtt OldRawDataRemover.Arn
                  - !GetAtt OldNotificationsRemover.Arn
              
  AttachLogsAndPutEvents:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: 
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CloudWatchLogsPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
        - PolicyName: EventBridgePutEventsPolicy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - events:PutEvents
                Resource:
                  - !GetAtt DayinbloomEventBus.Arn

  # EventBridge Scheduler Schedules
  Every15Min:
    Type: AWS::Scheduler::Schedule
    Properties:
      Name: intradata-collector-schedule
      Description: 심박수, 걸음 수, 거리, 칼로리 인트라데이 데이터를 매 15분마다 수집합니다
      ScheduleExpression: cron(0/15 * * * ? *)
      State: ENABLED
      FlexibleTimeWindow:
        Mode: "OFF"
      Target:
        Arn: !GetAtt IntradayDataCollector.Arn
        RoleArn: !GetAtt SchedulerInvokeRole.Arn
  FitbitAverageCleaner:
    Type: AWS::Scheduler::Schedule
    Properties:
      Name: average-cleaner-schedule
      ScheduleExpression: cron(0 18 * * ? *)
      State: ENABLED
      FlexibleTimeWindow:
        Mode: "OFF"
      Target:
        Arn: !GetAtt OldAverageDataRemover.Arn
        RoleArn: !GetAtt SchedulerInvokeRole.Arn
  FitbitRawdataCleaner:
    Type: AWS::Scheduler::Schedule
    Properties:
      Name: rawdata-cleaner-schedule
      ScheduleExpression: cron(0 17 * * ? *)
      State: ENABLED
      FlexibleTimeWindow:
        Mode: "OFF"
      Target:
        Arn: !GetAtt OldRawDataRemover.Arn
        RoleArn: !GetAtt SchedulerInvokeRole.Arn
  SleepDataSchedule:
    Type: AWS::Scheduler::Schedule
    Properties:
      Name: sleep-data-schedule
      Description: 수면 데이터를 한국시간 07시, 10시, 14시, 19시, 23시에 수집합니다
      ScheduleExpression: cron(0 22,1,5,10,14 * * ? *) 
      State: ENABLED
      FlexibleTimeWindow:
        Mode: "OFF"
      Target:
        Arn: !GetAtt SleepDataCollector.Arn
        RoleArn: !GetAtt SchedulerInvokeRole.Arn
  HealthMetricsSchedule:
    Type: AWS::Scheduler::Schedule
    Properties:
      Name: health-metrics-schedule
      Description: 건강 지표 데이터를 한국시간 00시에 수집합니다
      ScheduleExpression: cron(0 15 * * ? *)
      State: ENABLED
      FlexibleTimeWindow:
        Mode: "OFF"
      Target:
        Arn: !GetAtt DailyHealthMetricsCollector.Arn
        RoleArn: !GetAtt SchedulerInvokeRole.Arn
  DailySummarySchedule:
    Type: AWS::Scheduler::Schedule
    Properties:
      Name: daily-summary-schedule
      Description: 활동 데이터를 한국시간 00시에 수집합니다
      ScheduleExpression: cron(0 15 * * ? *)
      State: ENABLED
      FlexibleTimeWindow:
        Mode: "OFF"
      Target:
        Arn: !GetAtt DailySummaryCollector.Arn
        RoleArn: !GetAtt SchedulerInvokeRole.Arn
  LongTermAverageSchedule:
    Type: AWS::Scheduler::Schedule
    Properties:
      Name: long-term-average-schedule
      Description: 장기 평균을 매 달 2일 한국시간 01시에 계산하여 데이터로 저장합니다
      ScheduleExpression: cron(0 16 1 * ? *)
      State: ENABLED
      FlexibleTimeWindow:
        Mode: "OFF"
      Target:
        Arn: !GetAtt LongTermAverageCalculator.Arn
        RoleArn: !GetAtt SchedulerInvokeRole.Arn
  
  # Lambda Functions
  IntradayDataCollector:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: fitbit-intraday-data-collector
      Description: "'마지막 기기 동기화 시간' 의 15분 전부터의 심박수, 걸음 수, 거리, 칼로리 데이터를 가져와서 저장하는 함수"
      Runtime: nodejs22.x
      Architectures:
        - x86_64
      Role: !GetAtt AttachLogsAndPutEvents.Arn
      CodeUri: dist/intraday-data-collector
      Handler: handler.handler
      Environment:
        Variables:
          DB_HOST: ""
          DB_USER: ""
          DB_PASSWORD: ""
          DB_NAME: ""
      Timeout: 30
      Layers:
        - arn:aws:lambda:ap-northeast-2:767397900488:layer:axios:8
        - arn:aws:lambda:ap-northeast-2:767397900488:layer:database-layer:1
        - !Ref EBClientLayer
  SleepDataCollector:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: fitbit-sleep-data-collector
      Description: 하루에 5번 오늘 수면 데이터 수집 후 저장하는 함수
      Runtime: nodejs22.x
      Architectures:
        - x86_64
      Role: !GetAtt AttachLogsAndPutEvents.Arn
      CodeUri: dist/sleep-data-collector
      Handler: handler.handler
      Environment:
        Variables:
          DB_HOST: ""
          DB_USER: ""
          DB_PASSWORD: ""
          DB_NAME: ""
      Timeout: 30
      Layers:
        - arn:aws:lambda:ap-northeast-2:767397900488:layer:axios:8
        - arn:aws:lambda:ap-northeast-2:767397900488:layer:database-layer:1
        - !Ref EBClientLayer
  DailySummaryCollector:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: fitbit-daily-summary-collector
      Description: 일일 활동 요약 데이터 수집 및 저장하는 함수
      Runtime: nodejs22.x
      Architectures:
        - x86_64
      Role: !GetAtt AttachLogsAndPutEvents.Arn
      CodeUri: dist/daily-summary-collector
      Handler: handler.handler
      Environment:
        Variables:
          DB_HOST: ""
          DB_USER: ""
          DB_PASSWORD: ""
          DB_NAME: ""
      Timeout: 30
      Layers:
        - arn:aws:lambda:ap-northeast-2:767397900488:layer:axios:8
        - arn:aws:lambda:ap-northeast-2:767397900488:layer:database-layer:1
  DailyHealthMetricsCollector:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: fitbit-daily-health-metrics-collector
      Description: 일일 건강 지표 데이터 수집 및 저장하는 함수
      Runtime: nodejs22.x
      Architectures:
        - x86_64
      Role: !GetAtt AttachLogsAndPutEvents.Arn
      CodeUri: dist/daily-health-metrics-collector
      Handler: handler.handler
      Environment:
        Variables:
          DB_HOST: ""
          DB_USER: ""
          DB_PASSWORD: ""
          DB_NAME: ""
      Timeout: 30
      Layers:
        - arn:aws:lambda:ap-northeast-2:767397900488:layer:axios:8
        - arn:aws:lambda:ap-northeast-2:767397900488:layer:database-layer:1
  ShortTermAverageCalculator:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: fitbit-short-term-average-calculator
      Description: 어제의 데이터를 기반으로 단기 평균 데이터를 업데이트하는 함수
      Runtime: nodejs22.x
      Architectures:
        - x86_64
      Role: !GetAtt AttachLogsAndPutEvents.Arn
      CodeUri: dist/short-term-average-calculator
      Handler: handler.handler
      Events:
        MainSleepTriggered:
          Type: EventBridgeRule
          Properties:
            RuleName: MainSleepDetected
            Pattern:
              detail-type:
                - "Main Sleep Detected"
            EventBusName: !Ref DayinbloomEventBus
      Environment:
        Variables:
          DB_HOST: ""
          DB_USER: ""
          DB_PASSWORD: ""
          DB_NAME: ""
      Timeout: 30
      Layers:
        - arn:aws:lambda:ap-northeast-2:767397900488:layer:database-layer:1
  LongTermAverageCalculator:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: fitbit-long-term-average-calculator
      Description: 매월 2일에 지난 달의 데이터를 기반으로 장기 평균 데이터를 업데이트하는 함수
      Runtime: nodejs22.x
      Architectures:
        - x86_64
      Role: !GetAtt AttachLogsAndPutEvents.Arn
      CodeUri: dist/long-term-average-calculator
      Handler: handler.handler
      Environment:
        Variables:
          DB_HOST: ""
          DB_USER: ""
          DB_PASSWORD: ""
          DB_NAME: ""
      Timeout: 30
      Layers:
        - arn:aws:lambda:ap-northeast-2:767397900488:layer:database-layer:1
  OldAverageDataRemover:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: fitbit-old-average-data-remover
      Description: 오래된 평균 데이터를 삭제하는 함수
      Runtime: nodejs22.x
      Architectures:
        - x86_64
      Role: !GetAtt AttachLogsAndPutEvents.Arn
      CodeUri: dist/old-average-data-remover
      Handler: handler.handler
      Environment:
        Variables:
          DB_HOST: ""
          DB_USER: ""
          DB_PASSWORD: ""
          DB_NAME: ""
      Timeout: 30
      Layers:
        - arn:aws:lambda:ap-northeast-2:767397900488:layer:database-layer:1
  OldRawDataRemover:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: fitbit-old-raw-data-remover
      Description: 오래된 일반 데이터를 삭제하는 함수
      Runtime: nodejs22.x
      Architectures:
        - x86_64
      Role: !GetAtt AttachLogsAndPutEvents.Arn
      CodeUri: dist/old-raw-data-remover
      Handler: handler.handler
      Environment:
        Variables:
          DB_HOST: ""
          DB_USER: ""
          DB_PASSWORD: ""
          DB_NAME: ""
      Timeout: 30
      Layers:
        - arn:aws:lambda:ap-northeast-2:767397900488:layer:database-layer:1
  OldNotificationsRemover:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: fitbit-old-notifications-remover
      Description: 오래된 알림 데이터를 삭제하는 함수
      Runtime: nodejs22.x
      Architectures:
        - x86_64
      Role: !GetAtt AttachLogsAndPutEvents.Arn
      CodeUri: dist/old-notifications-remover
      Handler: handler.handler
      Environment:
        Variables:
          DB_HOST: ""
          DB_USER: ""
          DB_PASSWORD: ""
          DB_NAME: ""
      Timeout: 30
      Layers:
        - arn:aws:lambda:ap-northeast-2:767397900488:layer:database-layer:1
  AnomalyDetector:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: fitbit-anomaly-detector
      Description: 인트라데이 데이터를 참조하여 이상 징후를 감지하는 함수
      Runtime: nodejs22.x
      Architectures:
        - x86_64
      Role: !GetAtt AttachLogsAndPutEvents.Arn
      CodeUri: dist/anomaly-detector
      Handler: handler.handler
      Events:
        IntradayDataInserted:
          Type: EventBridgeRule
          Properties:
            RuleName: IntradayDataInserted
            Pattern:
              detail-type:
                - "Detect Anomalies"
            EventBusName: !Ref DayinbloomEventBus
      Environment:
        Variables:
          DB_HOST: ""
          DB_USER: ""
          DB_PASSWORD: ""
          DB_NAME: ""
      Timeout: 30
      Layers:
        - arn:aws:lambda:ap-northeast-2:767397900488:layer:database-layer:1
        - !Ref EBClientLayer
  # Layers
  EBClientLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: eb-client-layer
      Description: aws-sdk/client-eventbridge
      CompatibleRuntimes:
        - nodejs18.x
        - nodejs20.x
        - nodejs22.x
      CompatibleArchitectures:
        - x86_64
        - arm64
      ContentUri: layers/eventbridge-sdk
      RetentionPolicy: Retain


# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    LoggingConfig:
      LogFormat: Text
